close all;
fclose all;
clear all;
clc;

% generate two test signals: x1(t) = A*cos(2*pi*f*t), let {A = 0.5, f = 441 for 0 <= t < 1} and {A = 0.5, f = 882 for 1 <= t <= 2}), x2(t) = A*cos(2*pi*f*t), 
% let {A = 0.5, f = 441 for 0 <= t < 1} and {A = 0.9, f = 441 for 1 <= t <= 2})

% Test signal 1
A=0.5;
f=441;
fs=44100;
step1=1/fs;
t1=0:step1:(1-step1);
x1=A*cos(2*pi*f*t1);

f=882;
% step2=f/fs;
% t2=1:step2:2;
t2=1:step1:2;

x1=[x1 A*cos(2*pi*f*t2)];
x1=x1';
tsig1=[t1 t2];

figure; plot(tsig1,x1);

% Test signal 2
f=441;
t3=0:step1:(1-step1);
x2=A*cos(2*pi*f*t3);

A2=0.9;
t4=1:step1:2;
x2=[x2 A2*cos(2*pi*f*t4)];

x2=x2';

tsig2=[t3 t4];
figure; plot(tsig2,x2)

windowSize=1024;
hopSize=256;

[nvt1] = mySpectralFlux(x1, windowSize, hopSize) ;
[val1,loc1]=max(nvt1);
PeakNovSpecFluxsig1=loc1*hopSize/fs;
display(PeakNovSpecFluxsig1);

[nvt3] = mySpectralFlux(x2, windowSize, hopSize) ;
[val3,loc3]=max(nvt3);
PeakNovSpecFluxsig2=loc1*hopSize/fs;
display(PeakNovSpecFluxsig2);

[nvt2] = myPeakEnv(x1, windowSize, hopSize);
[nvt4] = myPeakEnv(x2, windowSize, hopSize);

tsig3=0:(hopSize/fs):2;
figure; plot(tsig3(1:length(nvt1)),nvt1); figure; plot(tsig3(1:length(nvt2)),nvt2);
figure; plot(tsig3(1:length(nvt3)),nvt3); figure; plot(tsig3(1:length(nvt1)),nvt4);


% [nvt] = myWPD(x, windowSize, hopSize);
